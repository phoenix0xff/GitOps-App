name: GitOps pipeline with ArgoCD (pull-based)

on:
  push:
    branches:
      - main

env:
  PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  GIT_EMAIL: ${{ secrets.GIT_EMAIL }}
  GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
  COMMIT_SHA: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Install dependencies
        run: npm install --no-audit --no-fund

      - name: Build Docker image
        run: |
          docker build \
            --label "org.opencontainers.image.revision=$COMMIT_SHA" \
            --label "org.opencontainers.image.source=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}" \
            --label "org.opencontainers.image.created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
            -t $DOCKERHUB_USERNAME/my-app:$COMMIT_SHA .

      - name: Scan Docker image with Trivy
        run: |
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            aquasec/trivy:latest image "$DOCKERHUB_USERNAME/my-app:$COMMIT_SHA"
            
      - name: Log in to DockerHub
        run: echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

      - name: Push Docker image
        run: docker push $DOCKERHUB_USERNAME/my-app:$COMMIT_SHA

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout manifests repo
        uses: actions/checkout@v3
        with:
          repository: phoenix0xff/GitOps
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GIT_USERNAME"
          git config user.email "$GIT_EMAIL"

      - name: Update image tag in deployment.yaml
        run: |
          echo "Before update:"; grep "image:" manifest/deployment.yaml || true
          sed -i "s+image: $DOCKERHUB_USERNAME/my-app.*+image: $DOCKERHUB_USERNAME/my-app:$COMMIT_SHA+g" manifest/deployment.yaml
          echo "After update:"; grep "image:" manifest/deployment.yaml || true

      - name: Commit and push updated manifest
        run: |
          git add manifest/deployment.yaml
          git commit -m "Update image to $COMMIT_SHA" || echo "No changes to commit"
          git push origin main